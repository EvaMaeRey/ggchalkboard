[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ggchalkboard authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). ggchalkboard: Package (One Line, Title Case). R package version 0.0.0.9000.","code":"@Manual{,   title = {ggchalkboard: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"ggchalkboard-is-an-example-of-a-ggplot2-extension-theme-which-features-update_geom_defaults--the-future-is-a-bit-more-coordinated","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"consider gifted comes thematic choices ggplot2. know thematic choices can ‘make break’ comes audience. like chalkboards think can reasonable job mimicking look. -progress theme extension package tries capture best practices creating theme extensions. Unfortunately, due perceived lack talent theming, ’m actually pretty new space, welcome feedback anybody real expertise lend. might new interesting attempted coordination aesthetic defaults geom stat layers theme. , see example geom_point(), defined GeomPoint proto object following default aesthetics. sensible starting points. Surely people question default color choice ‘burlywood4’. ‘black’ color 1.5 size defaults may look less sensible context great theme ’ve constructed. going tackle update_geom_defaults() can used complement new theme function. let’s get ahead . Let’s start creating creating theme_chalkboard, likely familiar ggplot2 extension entry point. topic gets first billing ggplot2 extension chapter ggplot2 covered detail , won’t https://ggplot2-book.org/extensions ’ll modifying theme, since don’t want start scratch – theme contains lot decisions; get sense can look length list object returned ggplot2::theme_gray() let’s get writing theme, theme_chalkboard. think likely room improvement . Please chime ’d like alert problems better ways get things done! especially hesitations sizing relative sizing. Please excuse ignorances. Let’s try !   looks pretty good ! … used sharpie chalkboard!? Layers (geoms_* stats_*) chalk-like …","code":"ggplot2::GeomPoint$default_aes #> Aesthetic mapping:  #> * `shape`  -> 19 #> * `colour` -> \"black\" #> * `size`   -> 1.5 #> * `fill`   -> NA #> * `alpha`  -> NA #> * `stroke` -> 0.5 ggplot2::theme_gray() |> length() #> [1] 114 #' Title #' #' @param board_color a string which is a color value #' @param chalk_color a string which is a color value #' @param ...  #' #' @return a ggplot2 object #' @export #' #' @examples theme_chalkboard <- function(board_color = \"darkseagreen4\",                              chalk_color = \"lightyellow\", ...){    ggplot2::theme_gray(...) %+replace%   ##<< we'll piggy back on an existing theme     ggplot2::theme(       rect = ggplot2::element_rect(fill = board_color,                                    color = board_color),       text = ggplot2::element_text(color = chalk_color,                                    face = \"italic\",                                    size = 18),       panel.background = ggplot2::element_rect(fill = board_color,                                                color = board_color),       axis.text = ggplot2::element_text(color = chalk_color),       axis.ticks = ggplot2::element_line(color = chalk_color),       panel.grid = ggplot2::element_blank(),       complete = TRUE   ##<< important, see 20.1.2 Complete themes in ggplot2 book       )  } library(ggplot2) ggplot(cars) +   aes(speed, dist) +   geom_point() last_plot() +   theme_chalkboard()"},{"path":"/index.html","id":"using-update_geom_defaults-for-matching-geomstat-layers-look-and-feel-of-to-new-theme","dir":"","previous_headings":"","what":"Using update_geom_defaults for matching geom/stat layers look and feel of to new theme","title":"What the Package Does (One Line, Title Case)","text":"’ll use ‘update_geom_defaults’ function create geoms_chalk_on() function, , anticipate wanting turn function back . , ’ll want save ggplot2’s defaults. save lists data theme package. ’ll use create geom_chalk_off(). Someday, easier… now… https://github.com/tidyverse/ggplot2/pull/5098 whole strategy might get immediately revised copying dev version 5098 using Point interest: layer-defaults theme coordination wish lists long time: See https://github.com/tidyverse/ggplot2/pull/2749 ‘Allow default geom aesthetics set theme’ might precursor issue: https://github.com/tidyverse/ggplot2/issues/2239 Another big revision work generalizing . know ’ve just selected handful important Geoms, soon enough, ’ll see mismatching Okay! Let’s see geoms_chalk_on action.  nice! points match look feel theme lot better. Okay, let’s check can turn new defaults back .  Great, ’s working! , let’s write couple derivative functions slightly different chalkboard look.  coordination can done comes scales:  Color fill scale probably greater interest, know. Something come back .","code":"## save default lists in a fresh session so that defaults are true to ggplot package defaults default_aes_point   <- ggplot2::GeomPoint$default_aes default_aes_segment <- ggplot2::GeomSegment$default_aes default_aes_rug     <- ggplot2::GeomRug$default_aes default_aes_rect    <- ggplot2::GeomRect$default_aes default_aes_bar     <- ggplot2::GeomBar$default_aes default_aes_label   <- ggplot2::GeomLabel$default_aes  # https://r-pkgs.org/data.htmlf usethis::use_data(default_aes_point, overwrite = TRUE) usethis::use_data(default_aes_segment, overwrite = TRUE) usethis::use_data(default_aes_rug, overwrite = TRUE) usethis::use_data(default_aes_rect, overwrite = TRUE) usethis::use_data(default_aes_bar, overwrite = TRUE) usethis::use_data(default_aes_label, overwrite = TRUE)  # A more general approach # library(\"ggplot2\") # library(magrittr) #  # Geoms <- ls(pattern = '^Geom', env = as.environment('package:ggplot2')) #  # Grab all the default aes for geoms and assign them to value. # for(i in 1:length(Geoms)){ #    #   try(assign(paste0(\"default_aes\", Geoms[i]), get(Geoms[i]) %>% .$default_aes)) #    # } geoms_chalk_on <- function(chalk_color = \"lightyellow\", color = NULL, fill = NULL){    if(is.null(color)){color <- chalk_color}   if(is.null(fill)){fill <- chalk_color}    ggplot2::update_geom_defaults(\"point\",   list(colour = color, size = 3.5,    alpha = .75))   ggplot2::update_geom_defaults(\"segment\", list(colour = color, size = 1.25,   alpha = .75))   ggplot2::update_geom_defaults(\"rug\",     list(colour = color, size = 1,      alpha = .75))   ggplot2::update_geom_defaults(\"rect\",    list(colour = color, fill = color, size = 1,      alpha = .75))   ggplot2::update_geom_defaults(\"label\",   list(fill = fill, color = \"grey35\", size = 5))       # above is pretty limited... think more generally...     # https://stackoverflow.com/questions/21174625/ggplot-how-to-set-default-color-for-all-geoms   # params <- ls(pattern = '^geom_', env = as.environment('package:ggplot2'))   # geoms <- gsub(\"geom_\", \"\", params)   #   # lapply(geoms, update_geom_defaults, list(colour = color))   # lapply(geoms, update_geom_defaults, list(fill = fill))  } geoms_chalk_off <- function(){    ggplot2::update_geom_defaults(\"point\",     default_aes_point)   ggplot2::update_geom_defaults(\"segment\",   default_aes_segment)   ggplot2::update_geom_defaults(\"rug\",       default_aes_rug)   ggplot2::update_geom_defaults(\"rect\",      default_aes_rect)   ggplot2::update_geom_defaults(\"label\",     default_aes_label)  } geoms_chalk_on()  last_plot() geoms_chalk_off()  last_plot() theme_chalkboard_slate <- function(...){    theme_chalkboard(board_color = \"lightskyblue4\", chalk_color = \"honeydew\", ...)  }  geoms_chalk_on_slate <- function(chalk_color = \"honeydew\", ...){      geoms_chalk_on(chalk_color = chalk_color, ...)    } geoms_chalk_on_slate()  last_plot() +    theme_chalkboard_slate() +    ggxmean:::geom_lm() +    ggxmean:::geom_lm_residuals() scale_size_chalkboard <- function(...){      scale_size(range = c(4, 12), ...)    }  geoms_chalk_on()  ggplot(data = cars) +    aes(x = speed, y = dist, size = dist) +    geom_point() +    theme_chalkboard() +    scale_size_chalkboard()"},{"path":[]},{"path":[]},{"path":"/index.html","id":"bit-a-created-package-archetecture-running-devtoolscreate-in-interactive-session-","dir":"","previous_headings":"Phase 1. Minimal working package","what":"Bit A. Created package archetecture, running devtools::create(\".\") in interactive session. ✅","title":"What the Package Does (One Line, Title Case)","text":"","code":"devtools::create(\".\")"},{"path":"/index.html","id":"bit-b-added-roxygen-skeleton-","dir":"","previous_headings":"Phase 1. Minimal working package","what":"Bit B. Added roxygen skeleton? 🚧","title":"What the Package Does (One Line, Title Case)","text":"Use roxygen skeleton auto documentation making sure proposed functions exported. Generally, early , don’t much (anything) terms filling skeleton documentation, things may change.","code":""},{"path":"/index.html","id":"bit-c-managed-dependencies--","dir":"","previous_headings":"Phase 1. Minimal working package","what":"Bit C. Managed dependencies ? ✅","title":"What the Package Does (One Line, Title Case)","text":"Package dependencies managed, .e. depend::function() proposed functions declared DESCRIPTION","code":"usethis::use_package(\"ggplot2\")"},{"path":"/index.html","id":"bit-d-moved-functions-r-folder-","dir":"","previous_headings":"Phase 1. Minimal working package","what":"Bit D. Moved functions R folder? ✅","title":"What the Package Does (One Line, Title Case)","text":"Use new {readme2pkg} function readme…","code":"library(tidyverse) readme2pkg::chunk_to_r(\"theme_chalkboard\") readme2pkg::chunk_to_r(\"theme_chalkboard_slate\") readme2pkg::chunk_to_r(\"geoms_chalk_on\") readme2pkg::chunk_to_r(\"geoms_chalk_off\") readme2pkg::chunk_to_dir(\"DATASET\", dir = \"data-raw/\")"},{"path":"/index.html","id":"bit-e-run-devtoolscheck-and-addressed-errors--","dir":"","previous_headings":"Phase 1. Minimal working package","what":"Bit E. Run devtools::check() and addressed errors. 🚧 ✅","title":"What the Package Does (One Line, Title Case)","text":"","code":"devtools::check(pkg = \".\")"},{"path":"/index.html","id":"bit-f-build-package--","dir":"","previous_headings":"Phase 1. Minimal working package","what":"Bit F. Build package 🚧 ✅","title":"What the Package Does (One Line, Title Case)","text":"","code":"devtools::build()"},{"path":"/index.html","id":"bit-g-write-traditional-readme-that-uses-built-package-also-serves-as-a-test-of-build-","dir":"","previous_headings":"Phase 1. Minimal working package","what":"Bit G. Write traditional README that uses built package (also serves as a test of build. ✅","title":"What the Package Does (One Line, Title Case)","text":"goal {ggchalkboard} package make easy theme ggplots like chalkboards Install package : functions exported can remove go two colons, things really finalized, go without colons (rearrange readme…)","code":"remotes::install_github(\"EvaMaeRey/ggchalkboard\") library(ggchalkboard)   library(ggplot2)  ggplot(data = cars) +    aes(x = speed) +    geom_histogram() +    ggchalkboard:::theme_chalkboard()  ggchalkboard:::geoms_chalk_on()  last_plot()   ggchalkboard:::geoms_chalk_off()  last_plot()"},{"path":"/index.html","id":"bit-h-chosen-a-license-","dir":"","previous_headings":"Phase 1. Minimal working package","what":"Bit H. Chosen a license? ✅","title":"What the Package Does (One Line, Title Case)","text":"","code":"usethis::use_mit_license()"},{"path":"/index.html","id":"bit-i-add-lifecycle-badge-experimental-","dir":"","previous_headings":"Phase 1. Minimal working package","what":"Bit I. Add lifecycle badge (experimental) ✅","title":"What the Package Does (One Line, Title Case)","text":"","code":"usethis::use_lifecycle_badge(\"experimental\")"},{"path":"/index.html","id":"phase-2-listen--iterate-","dir":"","previous_headings":"","what":"Phase 2: Listen & iterate 🚧","title":"What the Package Does (One Line, Title Case)","text":"Try get feedback experts API, implementation, default decisions. already work solves problem?","code":""},{"path":[]},{"path":[]},{"path":"/index.html","id":"bit-b-written-formal-tests-of-functions-and-save-to-test-that-folders-","dir":"","previous_headings":"Phase 3: Let things settle","what":"Bit B. Written formal tests of functions and save to test that folders 🚧","title":"What the Package Does (One Line, Title Case)","text":"look like …","code":"library(testthat)  test_that(\"calc times 2 works\", {   expect_equal(times_two(4), 8)   expect_equal(times_two(5), 10)    }) readme2pkg::chunk_to_tests_testthat(\"test_calc_times_two_works\")"},{"path":[]},{"path":[]},{"path":[]},{"path":"/index.html","id":"bit-a-package-website-built--","dir":"","previous_headings":"Phase 4. Promote to wider audience…","what":"Bit A. Package website built? 🚧 ✅","title":"What the Package Does (One Line, Title Case)","text":"","code":"usethis::use_pkgdown() pkgdown::build_site()"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/index.html","id":"edit-description-file","dir":"","previous_headings":"","what":"Edit Description file","title":"What the Package Does (One Line, Title Case)","text":"","code":"readLines(\"DESCRIPTION\") #>  [1] \"Package: ggchalkboard\"                               #>  [2] \"Title: What the Package Does (One Line, Title Case)\" #>  [3] \"Version: 0.0.0.9000\"                                 #>  [4] \"Authors@R: \"                                         #>  [5] \"    person(given = \\\"First\\\",\"                       #>  [6] \"           family = \\\"Last\\\",\"                       #>  [7] \"           role = c(\\\"aut\\\", \\\"cre\\\"),\"              #>  [8] \"           email = \\\"first.last@example.com\\\",\"      #>  [9] \"           comment = c(ORCID = \\\"YOUR-ORCID-ID\\\"))\"  #> [10] \"Description: What the package does (one paragraph).\" #> [11] \"License: MIT + file LICENSE\"                         #> [12] \"Encoding: UTF-8\"                                     #> [13] \"LazyData: true\"                                      #> [14] \"Roxygen: list(markdown = TRUE)\"                      #> [15] \"RoxygenNote: 7.2.3\"                                  #> [16] \"Depends: \"                                           #> [17] \"    R (>= 2.10)\"                                     #> [18] \"Imports: \"                                           #> [19] \"    ggplot2\""},{"path":"/index.html","id":"environment","dir":"","previous_headings":"","what":"Environment","title":"What the Package Does (One Line, Title Case)","text":"just want print packages versions","code":"all <- sessionInfo() |> print() |> capture.output() all[11:20] #>  [1] \"\"                                                                          #>  [2] \"attached base packages:\"                                                   #>  [3] \"[1] stats     graphics  grDevices utils     datasets  methods   base     \" #>  [4] \"\"                                                                          #>  [5] \"other attached packages:\"                                                  #>  [6] \" [1] lubridate_1.9.2      forcats_1.0.0        stringr_1.5.0       \"       #>  [7] \" [4] dplyr_1.1.0          purrr_1.0.1          readr_2.1.4         \"       #>  [8] \" [7] tidyr_1.3.0          tibble_3.2.1         ggplot2_3.4.4.9000  \"       #>  [9] \"[10] tidyverse_2.0.0.9000\"                                                 #> [10] \"\""},{"path":"/index.html","id":"devtoolscheck-report","dir":"","previous_headings":"","what":"devtools::check() report","title":"What the Package Does (One Line, Title Case)","text":"","code":"devtools::check(pkg = \".\")"},{"path":"/reference/theme_chalkboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — theme_chalkboard","title":"Title — theme_chalkboard","text":"Title","code":""},{"path":"/reference/theme_chalkboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — theme_chalkboard","text":"","code":"theme_chalkboard(   board_color = \"darkseagreen4\",   chalk_color = \"lightyellow\",   ... )"},{"path":"/reference/theme_chalkboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — theme_chalkboard","text":"board_color string color value chalk_color string color value ...","code":""},{"path":"/reference/theme_chalkboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — theme_chalkboard","text":"ggplot2 object","code":""}]
